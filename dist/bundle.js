/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./main.ts":
/*!*****************!*\
  !*** ./main.ts ***!
  \*****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MoveByTag)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nObject(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }());\n\n\nconst DEFAULT_SETTINGS = {\n    tagMappings: [],\n    confirmBeforeMove: true,\n    excludedFolders: [],\n    limitedFolders: [],\n    enableLogging: true\n};\nclass MoveByTag extends Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()) {\n    log(message) {\n        if (this.settings.enableLogging) {\n            console.log(`[Move by Tag] ${message}`);\n        }\n    }\n    generateId() {\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\n    }\n    onload() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            yield this.loadSettings();\n            // This adds a command to the app's command palette.\n            this.addCommand({\n                id: 'move-by-tag',\n                name: 'Move by Tag',\n                callback: () => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n                    const modal = new MoveByTagModal(this.app, this);\n                    modal.onClose = () => {\n                        // Clean up suggestions when modal is closed\n                        const suggestionsContainer = document.getElementById('folder-suggestions');\n                        if (suggestionsContainer) {\n                            suggestionsContainer.remove();\n                        }\n                    };\n                    modal.open();\n                }),\n            });\n            // Register the command in Obsidian\n            this.addCommand({\n                id: 'show-file-info',\n                name: 'Show File Info',\n                checkCallback: (checking) => {\n                    const activeFile = this.app.workspace.getActiveFile();\n                    if (activeFile) {\n                        if (!checking) {\n                            this.showFileInfo(activeFile);\n                        }\n                        return true;\n                    }\n                    return false;\n                }\n            });\n            this.addSettingTab(new MoveByTagSettingTab(this.app, this));\n            console.log('Move by Tag Plugin loaded');\n        });\n    }\n    onunload() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            console.log('Move by Tag Plugin unloaded');\n            // Reset settings to default\n            // this.settings = Object.assign({}, DEFAULT_SETTINGS);\n            // await this.saveData({}); // Clear all stored data\n        });\n    }\n    extractTags(content) {\n        const tagRegex = /#\\w+/g;\n        return content.match(tagRegex) || [];\n    }\n    showFileInfo(file) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            const content = yield this.app.vault.read(file);\n            this.showFileInfoDialog(file.path, content);\n        });\n    }\n    showFileInfoDialog(filePath, content) {\n        const fileName = filePath.split('/').pop();\n        const tags = this.extractTags(content);\n        const dialogContent = `File Name: ${fileName}\\nLocation: ${filePath}\\nTags: ${tags.join(', ')}`;\n        const dialog = new InfoDialog(this.app, dialogContent);\n        dialog.open();\n    }\n    loadSettings() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            const loadedData = yield this.loadData();\n            console.log('Loaded settings data:', loadedData);\n            // Check if tagMappings is an object (old format)\n            if (loadedData.tagMappings && typeof loadedData.tagMappings === 'object' && !Array.isArray(loadedData.tagMappings)) {\n                // Convert old format to new format\n                const oldMappings = loadedData.tagMappings;\n                const convertedMappings = [];\n                // Group mappings by folder\n                const folderToTags = {};\n                Object.entries(oldMappings).forEach(([tag, folder]) => {\n                    if (!folderToTags[folder]) {\n                        folderToTags[folder] = [];\n                    }\n                    folderToTags[folder].push(tag);\n                });\n                // Create new mappings\n                Object.entries(folderToTags).forEach(([folder, tags]) => {\n                    convertedMappings.push({\n                        tags: tags,\n                        folder: folder,\n                        id: this.generateId()\n                    });\n                });\n                this.settings.tagMappings = convertedMappings;\n            }\n            else {\n                // If not in old format, assign directly\n                this.settings.tagMappings = loadedData.tagMappings || [];\n            }\n            console.log('Loaded excluded folders:', loadedData.excludedFolders);\n            console.log('Loaded limited folders:', loadedData.limitedFolders);\n            // Merge with default settings\n            this.settings = Object.assign(Object.assign({}, DEFAULT_SETTINGS), this.settings);\n        });\n    }\n    saveSettings() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            console.log('Saving settings data:', this.settings);\n            yield this.saveData(this.settings);\n        });\n    }\n}\nclass MoveByTagModal extends Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()) {\n    constructor(app, plugin) {\n        super(app);\n        this.settings = plugin.settings;\n        this.plugin = plugin;\n    }\n    showConfirmationDialog(movements) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                const modal = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(this.app);\n                modal.contentEl.createEl('h2', { text: 'Confirm File Movements' });\n                const container = modal.contentEl.createEl('div', { cls: 'move-by-tag-confirmation' });\n                container.createEl('p', { text: `About to move ${movements.length} files:` });\n                const list = container.createEl('ul');\n                movements.slice(0, 10).forEach(({ file, targetPath }) => {\n                    list.createEl('li', { text: `${file.path} â†’ ${targetPath}` });\n                });\n                if (movements.length > 10) {\n                    container.createEl('p', { text: `...and ${movements.length - 10} more files` });\n                }\n                const buttonContainer = container.createEl('div', { cls: 'move-by-tag-buttons' });\n                buttonContainer.createEl('button', { text: 'Cancel' })\n                    .addEventListener('click', () => {\n                    modal.close();\n                    resolve(false);\n                });\n                buttonContainer.createEl('button', { text: 'Confirm' })\n                    .addEventListener('click', () => {\n                    modal.close();\n                    resolve(true);\n                });\n                modal.onClose = () => {\n                    // Clean up suggestions when modal is closed\n                    const suggestionsContainer = document.getElementById('folder-suggestions');\n                    if (suggestionsContainer) {\n                        suggestionsContainer.remove();\n                    }\n                };\n                modal.open();\n            });\n        });\n    }\n    onOpen() {\n        const { contentEl } = this;\n        contentEl.setText('Move files based on their tags');\n        this.plugin.log('Opening Move by Tag modal');\n        // Add a button to trigger the file movement process\n        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n            .addButton((btn) => btn\n            .setButtonText('Move Files')\n            .onClick(() => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            yield this.moveFilesByTag();\n        })));\n    }\n    moveFilesByTag() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            const { vault } = this.app;\n            try {\n                this.plugin.log('Starting file movement process...');\n                const files = this.app.vault.getMarkdownFiles().filter(file => {\n                    return this.settings.limitedFolders.length === 0 ||\n                        this.settings.limitedFolders.some(folder => file.path.startsWith(folder));\n                });\n                this.plugin.log(`Found ${files.length} markdown files total`);\n                const movements = [];\n                // First, plan all movements\n                for (const file of files) {\n                    this.plugin.log(`Processing file: ${file.path}`);\n                    // Normalize file path\n                    const normalizedFilePath = file.path.startsWith('/') ? file.path : '/' + file.path;\n                    // Skip files in excluded folders\n                    if (this.settings.excludedFolders.some(folder => {\n                        const normalizedFolder = folder.startsWith('/') ? folder : '/' + folder;\n                        return normalizedFilePath.startsWith(normalizedFolder);\n                    })) {\n                        this.plugin.log(`Skipping excluded file: ${file.path}`);\n                        continue;\n                    }\n                    const tags = yield this.extractTags(file);\n                    this.plugin.log(`Found tags in ${file.path}: ${tags.join(', ') || 'none'}`);\n                    if (tags.length > 0) {\n                        const matches = this.getTargetFolderForTags(tags);\n                        if (matches.length > 0) {\n                            let targetFolder = matches[0].mapping.folder;\n                            // If there are multiple matches, show dialog for user to choose\n                            if (matches.length > 1) {\n                                this.plugin.log(`Found multiple matching folders for ${file.path}: ${matches.map(m => m.mapping.folder).join(', ')}`);\n                                targetFolder = yield this.showRuleConflictDialog(file, matches);\n                                if (!targetFolder) {\n                                    this.plugin.log(`User skipped file ${file.path} due to rule conflict`);\n                                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(`Skipped ${file.name} due to rule conflict`);\n                                    continue;\n                                }\n                            }\n                            this.plugin.log(`Selected target folder: ${targetFolder}`);\n                            const targetPath = `${targetFolder}/${file.name}`;\n                            // Check if file already exists in target\n                            if (yield this.app.vault.adapter.exists(targetPath)) {\n                                this.plugin.log(`File already exists at target location: ${targetPath}`);\n                                new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(`Skipping ${file.name}: File already exists in target location`);\n                                continue;\n                            }\n                            this.plugin.log(`Planning to move ${file.path} to ${targetPath}`);\n                            movements.push({ file, targetPath });\n                        }\n                        else {\n                            this.plugin.log(`No matching folder found for tags: ${tags.join(', ')}`);\n                        }\n                    }\n                    else {\n                        this.plugin.log(`No tags found in file: ${file.path}`);\n                    }\n                }\n                // If no files to move, notify and close\n                if (movements.length === 0) {\n                    this.plugin.log('No files to move - no valid tag mappings found');\n                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('No files to move');\n                    this.close();\n                    return;\n                }\n                this.plugin.log(`Found ${movements.length} files to move`);\n                // Show confirmation if enabled\n                if (this.settings.confirmBeforeMove) {\n                    const confirmed = yield this.showConfirmationDialog(movements);\n                    if (!confirmed) {\n                        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('Operation cancelled');\n                        return;\n                    }\n                }\n                // Perform movements\n                let successCount = 0;\n                for (const { file, targetPath } of movements) {\n                    try {\n                        yield this.app.vault.rename(file, targetPath);\n                        successCount++;\n                        if (this.settings.enableLogging) {\n                            console.log(`Moved ${file.path} to ${targetPath}`);\n                        }\n                    }\n                    catch (error) {\n                        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(`Failed to move ${file.name}: ${error.message}`);\n                    }\n                }\n                new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(`Successfully moved ${successCount} of ${movements.length} files`);\n                this.close();\n            }\n            catch (error) {\n                new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(`Error during file movement: ${error.message}`);\n                console.error('Move by Tag error:', error);\n                this.close();\n            }\n        });\n    }\n    extractTags(file) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            try {\n                this.plugin.log(`Reading content from file: ${file.path}`);\n                const content = yield this.app.vault.read(file);\n                const tagRegex = /#([\\w-]+)/g;\n                const tags = [];\n                let match;\n                while ((match = tagRegex.exec(content)) !== null) {\n                    tags.push(match[1]);\n                }\n                this.plugin.log(`Extracted tags from ${file.path}: ${tags.join(', ') || 'none'}`);\n                return tags;\n            }\n            catch (error) {\n                this.plugin.log(`Error extracting tags from ${file.path}: ${error.message}`);\n                return [];\n            }\n        });\n    }\n    getTargetFolderForTags(fileTags) {\n        if (this.settings.tagMappings.length === 0) {\n            new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('No mappings defined.');\n            return [];\n        }\n        this.plugin.log(`Checking tag mappings for tags: ${fileTags.join(', ')}`);\n        this.plugin.log(`Available mappings: ${JSON.stringify(this.settings.tagMappings)}`);\n        // Convert file tags to lowercase for case-insensitive matching\n        const lowerFileTags = fileTags.map(tag => tag.toLowerCase());\n        const matches = [];\n        // Check each mapping\n        for (const mapping of this.settings.tagMappings) {\n            // Convert mapping tags to lowercase\n            const lowerMappingTags = mapping.tags.map(tag => tag.toLowerCase());\n            // Track which tags from the mapping were found in the file\n            const matchedTags = [];\n            // Check each tag in the mapping\n            for (const mappingTag of mapping.tags) {\n                const lowerMappingTag = mappingTag.toLowerCase();\n                // Check if any file tag matches this mapping tag\n                const matchingFileTag = lowerFileTags.find(fileTag => fileTag === lowerMappingTag ||\n                    fileTag === lowerMappingTag + 's' ||\n                    fileTag.slice(0, -1) === lowerMappingTag);\n                if (matchingFileTag) {\n                    matchedTags.push(mappingTag);\n                }\n            }\n            // If all tags in the mapping were found, it's a match\n            if (matchedTags.length === mapping.tags.length) {\n                this.plugin.log(`Found matching mapping: ${mapping.tags.join(' + ')} â†’ ${mapping.folder}`);\n                matches.push({ mapping, matchedTags });\n            }\n        }\n        if (matches.length === 0) {\n            this.plugin.log('No matching folder found for tags');\n        }\n        return matches;\n    }\n    showRuleConflictDialog(file, matches) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                const modal = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(this.app);\n                modal.titleEl.setText(`\"${file.name}\"`);\n                const container = modal.contentEl.createEl('div');\n                container.createEl('p', {\n                    text: `This file matches multiple tag rules. Please select which folder to move it to:`\n                });\n                const list = container.createEl('div');\n                matches.forEach(({ mapping, matchedTags }) => {\n                    const row = list.createEl('div', { cls: 'move-by-tag-rule-option' });\n                    const button = row.createEl('button', {\n                        text: `Move to ${mapping.folder} (tags: ${mapping.tags.map(t => '#' + t).join(' + ')})`,\n                        cls: 'mod-cta'\n                    });\n                    button.style.marginBottom = '10px'; // Add margin to the bottom of the button\n                    button.addEventListener('click', () => {\n                        modal.close();\n                        resolve(mapping.folder);\n                    });\n                });\n                // Add cancel button\n                const cancelButton = container.createEl('button', {\n                    text: 'Skip this file',\n                    cls: 'move-by-tag-cancel'\n                });\n                cancelButton.addEventListener('click', () => {\n                    modal.close();\n                    resolve(null);\n                });\n                modal.onClose = () => {\n                    // Clean up suggestions when modal is closed\n                    const suggestionsContainer = document.getElementById('folder-suggestions');\n                    if (suggestionsContainer) {\n                        suggestionsContainer.remove();\n                    }\n                };\n                modal.open();\n            });\n        });\n    }\n}\nclass InfoDialog extends Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()) {\n    constructor(app, content) {\n        super(app);\n        this.content = content;\n    }\n    onOpen() {\n        const { contentEl } = this;\n        contentEl.setText(this.content);\n    }\n    onClose() {\n        const { contentEl } = this;\n        contentEl.empty();\n    }\n}\nclass MoveByTagSettingTab extends Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()) {\n    constructor(app, plugin) {\n        super(app, plugin);\n        this.plugin = plugin;\n    }\n    display() {\n        const { containerEl } = this;\n        containerEl.empty();\n        // General Settings Section\n        containerEl.createEl('h3', { text: 'General Settings' });\n        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(containerEl)\n            .setName('Confirm Before Moving')\n            .setDesc('Show confirmation dialog before moving files')\n            .addToggle(toggle => toggle\n            .setValue(this.plugin.settings.confirmBeforeMove)\n            .onChange((value) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            this.plugin.settings.confirmBeforeMove = value;\n            yield this.plugin.saveSettings();\n        })));\n        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(containerEl)\n            .setName('Enable Logging')\n            .setDesc('Log file movements to console')\n            .addToggle(toggle => toggle\n            .setValue(this.plugin.settings.enableLogging)\n            .onChange((value) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            this.plugin.settings.enableLogging = value;\n            yield this.plugin.saveSettings();\n        })));\n        // Excluded Folders Section\n        containerEl.createEl('h3', { text: 'Excluded Folders' });\n        containerEl.createEl('p', {\n            text: 'Files in these folders will not be moved. One folder path per line.',\n            cls: 'setting-item-description'\n        });\n        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(containerEl)\n            .addTextArea(text => {\n            // Set initial value from settings\n            const excludedFolders = this.plugin.settings.excludedFolders || [];\n            text.setValue(excludedFolders.join('\\n'))\n                .setPlaceholder('folder1/subfolder\\nfolder2')\n                .onChange((value) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n                this.plugin.settings.excludedFolders = value.split('\\n')\n                    .map(f => f.trim())\n                    .filter(f => f.length > 0);\n                yield this.plugin.saveSettings();\n            }));\n        });\n        // Specific Folders Section\n        containerEl.createEl('h3', { text: 'Specific Folders' });\n        containerEl.createEl('p', {\n            text: 'Files will only be moved from these folders. One folder path per line.',\n            cls: 'setting-item-description'\n        });\n        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(containerEl)\n            .addTextArea(text => {\n            // Set initial value from settings\n            const limitedFolders = this.plugin.settings.limitedFolders || [];\n            text.setValue(limitedFolders.join('\\n'))\n                .setPlaceholder('folder1/subfolder\\nfolder2')\n                .onChange((value) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n                this.plugin.settings.limitedFolders = value.split('\\n')\n                    .map(f => f.trim())\n                    .filter(f => f.length > 0);\n                yield this.plugin.saveSettings();\n            }));\n        });\n        // Tag Mappings Section\n        containerEl.createEl('h3', { text: 'Tag Mappings' });\n        containerEl.createEl('p', {\n            text: 'Define where files should be moved based on their tags.',\n            cls: 'setting-item-description'\n        });\n        // Add New Mapping and Delete All Buttons at the top\n        new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(containerEl)\n            .addButton(button => button\n            .setButtonText('Add New Mapping')\n            .setCta() // Make it stand out as the primary action\n            .onClick(() => this.showNewMappingModal()));\n        // Existing Mappings\n        const mappingsContainer = containerEl.createDiv('tag-mappings-container');\n        if (this.plugin.settings.tagMappings.length === 0) {\n            mappingsContainer.createEl('p', {\n                text: 'No tag mappings defined yet. Click \"Add New Mapping\" to create one.',\n                cls: 'setting-item-description'\n            });\n        }\n        // Sort mappings by first tag\n        const sortedMappings = [...this.plugin.settings.tagMappings]\n            .sort((a, b) => a.tags[0].localeCompare(b.tags[0]));\n        for (const mapping of sortedMappings) {\n            const tagDisplay = mapping.tags.map(t => '#' + t).join(' + ');\n            new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(mappingsContainer)\n                .setName(tagDisplay)\n                .setDesc(`Current destination: ${mapping.folder}`)\n                .addButton(button => button\n                .setButtonText('Edit')\n                .onClick(() => {\n                this.showEditMappingModal(mapping);\n            }));\n            // .addButton(button => button\n            //   .setIcon('trash')\n            //   .setTooltip('Delete mapping')\n            //   .onClick(async () => {\n            //     if (await this.showDeleteConfirmation(mapping)) {\n            //       this.plugin.settings.tagMappings = this.plugin.settings.tagMappings\n            //         .filter(m => m.id !== mapping.id);\n            //       await this.plugin.saveSettings();\n            //       this.display();\n            //     }\n            //   }));\n        }\n        ;\n    }\n    generateId() {\n        return Date.now().toString(36) + Math.random().toString(36).substr(2);\n    }\n    showNewMappingModal() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            const modal = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(this.app);\n            modal.titleEl.setText('Create New Tag Mapping');\n            const contentEl = modal.contentEl;\n            let tagsInput;\n            // Tags input\n            new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                .setName('Tags')\n                .setDesc('Enter tags without # symbol, separated by commas. All tags must be present for the rule to apply.')\n                .addText(text => {\n                tagsInput = text;\n                text.setPlaceholder('tag1, tag2, tag3');\n            });\n            // Folder input\n            const folderSetting = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                .setName('Destination Folder')\n                .addText((text) => {\n                this.folderInput = text;\n                text.setPlaceholder('folder/subfolder');\n                text.inputEl.style.width = '300px'; // Make input field wider\n                text.onChange((value) => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n                    const results = yield this.searchFolders(value);\n                    this.displayFolderSuggestions(results);\n                }));\n            });\n            // Buttons\n            new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                .addButton(button => button\n                .setButtonText('Cancel')\n                .onClick(() => modal.close()))\n                .addButton(button => button\n                .setButtonText('Add')\n                .setCta()\n                .onClick(() => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n                const tagsValue = tagsInput.getValue().trim();\n                const folder = this.folderInput.getValue().trim();\n                if (!tagsValue || !folder) {\n                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('Both tags and folder are required');\n                    return;\n                }\n                const tags = tagsValue.split(',').map(t => t.trim()).filter(t => t.length > 0);\n                if (tags.length === 0) {\n                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('At least one tag is required');\n                    return;\n                }\n                // Check for duplicate tag combinations\n                const tagSet = new Set(tags.map(t => t.toLowerCase()));\n                if (this.plugin.settings.tagMappings.some(m => m.tags.length === tags.length &&\n                    m.tags.every(t => tagSet.has(t.toLowerCase())))) {\n                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('This tag combination already has a mapping');\n                    return;\n                }\n                const newMapping = {\n                    id: this.generateId(),\n                    tags,\n                    folder\n                };\n                this.plugin.settings.tagMappings.push(newMapping);\n                yield this.plugin.saveSettings();\n                this.display();\n                modal.close();\n            })));\n            modal.onClose = () => {\n                // Clean up suggestions when modal is closed\n                const suggestionsContainer = document.getElementById('folder-suggestions');\n                if (suggestionsContainer) {\n                    suggestionsContainer.remove();\n                }\n            };\n            modal.open();\n        });\n    }\n    searchFolders(query) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            if (!query)\n                return [];\n            const folders = this.app.vault.getAllFolders();\n            console.log('All folders:', folders);\n            let folderPaths = folders.map(folder => {\n                // Ensure leading slash for root-level folders\n                return folder.path === '/' ? '/' : (folder.path.startsWith('/') ? folder.path : '/' + folder.path);\n            });\n            // If limited folders are set, only show folders within those paths\n            if (this.plugin.settings.limitedFolders.length > 0) {\n                const normalizedLimitedFolders = this.plugin.settings.limitedFolders.map(folder => folder.startsWith('/') ? folder : '/' + folder);\n                folderPaths = folderPaths.filter(path => normalizedLimitedFolders.some(limitedFolder => path.startsWith(limitedFolder) || limitedFolder.startsWith(path)));\n            }\n            // Apply search query filter\n            folderPaths = folderPaths\n                .filter(path => path.toLowerCase().includes(query.toLowerCase()))\n                .sort();\n            return folderPaths;\n        });\n    }\n    displayFolderSuggestions(folders) {\n        // Clear previous suggestions\n        const suggestionsContainer = document.getElementById('folder-suggestions');\n        if (suggestionsContainer) {\n            suggestionsContainer.remove();\n        }\n        // Create a new suggestions container\n        const newContainer = document.createElement('div');\n        newContainer.id = 'folder-suggestions';\n        newContainer.style.position = 'absolute';\n        newContainer.style.backgroundColor = 'white';\n        newContainer.style.border = '1px solid #ccc';\n        newContainer.style.zIndex = '1000';\n        // Add suggestions to the container\n        folders.forEach(folder => {\n            const suggestionItem = document.createElement('div');\n            suggestionItem.textContent = folder;\n            suggestionItem.style.padding = '5px';\n            suggestionItem.style.cursor = 'pointer';\n            // Add click event to select folder\n            suggestionItem.addEventListener('click', () => {\n                this.folderInput.setValue(folder); // Set the input value to the selected folder\n                newContainer.remove(); // Remove suggestions after selection\n            });\n            newContainer.appendChild(suggestionItem);\n        });\n        // Position the suggestions container under the input field\n        const inputEl = this.folderInput.inputEl;\n        const rect = inputEl.getBoundingClientRect();\n        const modalEl = document.querySelector('.modal');\n        const modalWidth = modalEl ? modalEl.getBoundingClientRect().width : 500;\n        newContainer.style.position = 'absolute';\n        newContainer.style.left = `${rect.left}px`;\n        newContainer.style.top = `${rect.bottom}px`;\n        newContainer.style.width = `${Math.min(modalWidth - 40, 300)}px`; // Use modal width minus padding, max 500px\n        newContainer.style.maxHeight = '200px';\n        newContainer.style.overflowY = 'auto';\n        newContainer.style.overflowX = 'hidden';\n        newContainer.style.textOverflow = 'ellipsis';\n        newContainer.style.whiteSpace = 'nowrap';\n        // Append the suggestions container\n        document.body.appendChild(newContainer);\n    }\n    showEditMappingModal(mapping) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            const modal = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(this.app);\n            modal.titleEl.setText('Edit Tag Mapping');\n            const contentEl = modal.contentEl;\n            let tagsInput;\n            // Tags input\n            new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                .setName('Tags')\n                .setDesc('Enter tags without # symbol, separated by commas. All tags must be present for the rule to apply.')\n                .addText(text => {\n                tagsInput = text;\n                text.setPlaceholder('tag1, tag2, tag3')\n                    .setValue(mapping.tags.join(', '));\n            });\n            // Folder input\n            new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                .setName('Destination Folder')\n                .addText((text) => {\n                this.folderInput = text;\n                text.setPlaceholder('folder/subfolder')\n                    .setValue(mapping.folder);\n            });\n            // Buttons\n            new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                .addButton(button => button\n                .setButtonText('Cancel')\n                .onClick(() => modal.close()))\n                .addButton(button => button\n                .setButtonText('Save')\n                .setCta()\n                .onClick(() => (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n                const tagsValue = tagsInput.getValue().trim();\n                const folder = this.folderInput.getValue().trim();\n                if (!tagsValue || !folder) {\n                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('Both tags and folder are required');\n                    return;\n                }\n                const tags = tagsValue.split(',').map(t => t.trim()).filter(t => t.length > 0);\n                if (tags.length === 0) {\n                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('At least one tag is required');\n                    return;\n                }\n                // Check for duplicate tag combinations, excluding the current mapping\n                const tagSet = new Set(tags.map(t => t.toLowerCase()));\n                if (this.plugin.settings.tagMappings.some(m => m.id !== mapping.id && // Exclude current mapping\n                    m.tags.length === tags.length &&\n                    m.tags.every(t => tagSet.has(t.toLowerCase())))) {\n                    new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())('This tag combination already has a mapping');\n                    return;\n                }\n                // Update the existing mapping\n                mapping.tags = tags;\n                mapping.folder = folder;\n                yield this.plugin.saveSettings();\n                this.display();\n                modal.close();\n            })));\n            modal.onClose = () => {\n                // Clean up suggestions when modal is closed\n                const suggestionsContainer = document.getElementById('folder-suggestions');\n                if (suggestionsContainer) {\n                    suggestionsContainer.remove();\n                }\n            };\n            modal.open();\n        });\n    }\n    showDeleteAllConfirmation() {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                const modal = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(this.app);\n                modal.titleEl.setText('Delete All Tag Mappings');\n                const contentEl = modal.contentEl;\n                contentEl.createEl('p', {\n                    text: 'Are you sure you want to delete all tag mappings? This action cannot be undone.'\n                });\n                new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                    .addButton(button => button\n                    .setButtonText('Cancel')\n                    .onClick(() => {\n                    modal.close();\n                    resolve(false);\n                }))\n                    .addButton(button => button\n                    .setButtonText('Delete All')\n                    .setWarning()\n                    .onClick(() => {\n                    modal.close();\n                    resolve(true);\n                }));\n                modal.onClose = () => {\n                    // Clean up suggestions when modal is closed\n                    const suggestionsContainer = document.getElementById('folder-suggestions');\n                    if (suggestionsContainer) {\n                        suggestionsContainer.remove();\n                    }\n                };\n                modal.open();\n            });\n        });\n    }\n    showDeleteConfirmation(mapping) {\n        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function* () {\n            return new Promise((resolve) => {\n                const modal = new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(this.app);\n                modal.titleEl.setText('Delete Tag Mapping');\n                const contentEl = modal.contentEl;\n                const tagDisplay = mapping.tags.map(t => '#' + t).join(' + ');\n                contentEl.createEl('p', {\n                    text: `Are you sure you want to delete the mapping for ${tagDisplay}?\\n` +\n                        `Files with these tags will no longer be moved automatically.`\n                });\n                new Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'obsidian'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())(contentEl)\n                    .addButton(button => button\n                    .setButtonText('Cancel')\n                    .onClick(() => {\n                    modal.close();\n                    resolve(false);\n                }))\n                    .addButton(button => button\n                    .setButtonText('Delete')\n                    .setWarning()\n                    .onClick(() => {\n                    modal.close();\n                    resolve(true);\n                }));\n                modal.onClose = () => {\n                    // Clean up suggestions when modal is closed\n                    const suggestionsContainer = document.getElementById('folder-suggestions');\n                    if (suggestionsContainer) {\n                        suggestionsContainer.remove();\n                    }\n                };\n                modal.open();\n            });\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,\n\n//# sourceURL=webpack://move-by-tag/./main.ts?");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values)\n/* harmony export */ });\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nfunction __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\n\n//# sourceURL=webpack://move-by-tag/./node_modules/tslib/tslib.es6.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./main.ts");
/******/ 	
/******/ })()
;